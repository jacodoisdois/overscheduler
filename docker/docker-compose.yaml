version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: fastify_user
      POSTGRES_PASSWORD: fastify_pass
      POSTGRES_DB: fastify_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-net

  redis:
    image: redis:7
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - app-net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672' # AMQP
      - '15672:15672' # Web UI
    networks:
      - app-net

  # Adicione ou mantenha esta definição do Prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./infra/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-net

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.99.0
    container_name: otel-collector
    command: [--config=/etc/otel-collector-config.yaml]
    ports:
      - '4317:4317'
      - '4318:4318'
      - '8888:8888'
    volumes:
      - ./infra/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    depends_on:
      - loki
      - jaeger
    networks:
      - app-net

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./infra/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    networks:
      - app-net

  grafana:
    image: grafana/grafana:10.4.0
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
      - jaeger
    networks:
      - app-net

  jaeger:
    image: jaegertracing/all-in-one:1.56
    container_name: jaeger
    ports:
      - '16686:16686'
      - '14268:14268'
      - '14250:14250'
    environment:
      COLLECTOR_OTLP_ENABLED: true
    networks:
      - app-net

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.0
    container_name: keycloak
    ports:
      - '8080:8080'
      - '8443:8443'
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/fastify_db
      KC_DB_USERNAME: fastify_user
      KC_DB_PASSWORD: fastify_pass
      KC_HOSTNAME: localhost
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    depends_on:
      - postgres
    networks:
      - app-net

volumes:
  postgres_data:
  loki_data:
  grafana_data:

networks:
  app-net:
    driver: bridge
